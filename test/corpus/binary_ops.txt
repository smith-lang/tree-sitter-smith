==================
Addition and multiplication
==================

2 + 3 * 4

---

(source_file
  (statement
    (expression
      (binary_operation
        left: (expression
          (integer_literal))
        operator: (add)
        right: (expression
          (binary_operation
            left: (expression
              (integer_literal))
            operator: (multiply)
            right: (expression
              (integer_literal))))))))

==================
Multiplication and addition
==================

2 * 3 + 4

---

(source_file
  (statement
    (expression
      (binary_operation
        left: (expression
          (binary_operation
            left: (expression
              (integer_literal))
            operator: (multiply)
            right: (expression
              (integer_literal))))
        operator: (add)
        right: (expression
          (integer_literal))))))

==================
Multiple operations
==================

2 + 3 * 4 - 5 / 2

---

(source_file
  (statement
    (expression
      (binary_operation
        left: (expression
          (binary_operation
            left: (expression
              (integer_literal))
            operator: (add)
            right: (expression
              (binary_operation
                left: (expression
                  (integer_literal))
                operator: (multiply)
                right: (expression
                  (integer_literal))))))
        operator: (subtract)
        right: (expression
          (binary_operation
            left: (expression
              (integer_literal))
            operator: (divide)
            right: (expression
              (integer_literal))))))))

==================
Parentheses overriding precedence
==================

(2 + 3) * 4

---

(source_file
  (statement
    (expression
      (binary_operation
        left: (expression
          (parenthesized_expression
            (expression
              (binary_operation
                left: (expression
                  (integer_literal))
                operator: (add)
                right: (expression
                  (integer_literal))))))
        operator: (multiply)
        right: (expression
          (integer_literal))))))

==================
Mixed operators with floats
==================

1.5 * 2.0 + 3.5 / 0.5 - 1.0

---

(source_file
  (statement
    (expression
      (binary_operation
        left: (expression
          (binary_operation
            left: (expression
              (binary_operation
                left: (expression
                  (float_literal))
                operator: (multiply)
                right: (expression
                  (float_literal))))
            operator: (add)
            right: (expression
              (binary_operation
                left: (expression
                  (float_literal))
                operator: (divide)
                right: (expression
                  (float_literal))))))
        operator: (subtract)
        right: (expression
          (float_literal))))))

==================
Unary operator with multiplication
==================

-2 * 3

---

(source_file
  (statement
    (expression
      (binary_operation
        left: (expression
          (unary_operation
            (negative)
            (expression
              (integer_literal))))
        operator: (multiply)
        right: (expression
          (integer_literal))))))

==================
Nested parentheses
==================

((2 + 3) * 4) + 5

---

(source_file
  (statement
    (expression
      (binary_operation
        left: (expression
          (parenthesized_expression
            (expression
              (binary_operation
                left: (expression
                  (parenthesized_expression
                    (expression
                      (binary_operation
                        left: (expression
                          (integer_literal))
                        operator: (add)
                        right: (expression
                          (integer_literal))))))
                operator: (multiply)
                right: (expression
                  (integer_literal))))))
        operator: (add)
        right: (expression
          (integer_literal))))))
