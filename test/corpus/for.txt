==================
for expression with one index variable
==================

for i { a[i] + 10 }

---

(source_file
    (expr
        (for
            (index_var
                (symbol))
            (block
                (expr
                    (binary_op
                        left: (expr
                            (index
                                (expr
                                    (symbol))
                                (expr
                                    (symbol))))
                        right: (expr
                            (int))))))))

==================
for expression with two index variables
==================

for i, j { mat[j][i] }

---

(source_file
    (expr
        (for
            (index_var
                (symbol))
            (index_var
                (symbol))
            (block
                (expr
                    (index
                        (expr
                            (index
                                (expr
                                    (symbol))
                                (expr
                                    (symbol))))
                        (expr
                            (symbol))))))))

==================
for expression with trailing comma
==================

for i, j, { mat[j][i] }

---

(source_file
    (expr
        (for
            (index_var
                (symbol))
            (index_var
                (symbol))
            (block
                (expr
                    (index
                        (expr
                            (index
                                (expr
                                    (symbol))
                                (expr
                                    (symbol))))
                        (expr
                            (symbol))))))))


==================
for expression with range
==================

for i in [1..=10] { print(i) }

---

(source_file
    (expr
        (for
            (index_var
                (symbol)
                (expr
                    (range
                        first: (expr
                            (int))
                        range_type: (range_type)
                        last: (expr
                            (int)))))
            (block
                (expr
                    (call
                        fn: (expr
                            (symbol))
                        args: (args
                            (expr
                                (symbol)))))))))

==================
for expression with multiple ranges
==================

for i in [1..=10], j in [1..=10] {
    print(i * j)
}

---

(source_file
    (expr
        (for
            (index_var
                (symbol)
                (expr
                    (range
                        first: (expr
                            (int))
                        range_type: (range_type)
                        last: (expr
                            (int)))))
            (index_var
                (symbol)
                (expr
                    (range
                        first: (expr
                            (int))
                        range_type: (range_type)
                        last: (expr
                            (int)))))
            (block
                (expr
                    (call
                        fn: (expr
                            (symbol))
                        args: (args
                            (expr
                                (binary_op
                                    left: (expr
                                        (symbol))
                                    right: (expr
                                        (symbol)))))))))))
