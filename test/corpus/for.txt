==================
for expression with one index variable
==================

for i { a[i] + 10 }

---

(source_file
    (statement
      (expression
          (for_expression
              (index_variable
                  (identifier))
              (block
                  (statement
                      (expression
                          (binary_operation
                              left: (expression
                                  (index_expression
                                      (expression
                                          (identifier))
                                      (expression
                                          (identifier))))
                              operator: (add)
                              right: (expression
                                  (integer_literal))))))))))

==================
for expression with two index variables
==================

for i, j { mat[j][i] }

---

(source_file
    (statement
      (expression
          (for_expression
              (index_variable
                  (identifier))
              (index_variable
                  (identifier))
              (block
                  (statement
                      (expression
                          (index_expression
                              (expression
                                  (index_expression
                                      (expression
                                          (identifier))
                                      (expression
                                          (identifier))))
                              (expression
                                  (identifier))))))))))

==================
for expression with trailing comma
==================

for i, j, { mat[j][i] }

---

(source_file
    (statement
      (expression
          (for_expression
              (index_variable
                  (identifier))
              (index_variable
                  (identifier))
              (block
                  (statement
                      (expression
                          (index_expression
                              (expression
                                  (index_expression
                                      (expression
                                          (identifier))
                                      (expression
                                          (identifier))))
                              (expression
                                  (identifier))))))))))


==================
for expression with range
==================

for i in [1..10] { print(i) }

---

(source_file
    (statement
      (expression
          (for_expression
              (index_variable
                  (identifier)
                  (expression
                      (range_expression
                          first: (expression
                              (integer_literal))
                          last: (expression
                              (integer_literal)))))
              (block
                  (statement
                      (expression
                          (function_call
                              function: (expression
                                  (identifier))
                              arguments: (function_arguments
                                  (expression
                                      (identifier)))))))))))

==================
for expression with multiple ranges
==================

for i in [1..10], j in [1..10] {
    print(i * j)
}

---

(source_file
    (statement
      (expression
          (for_expression
              (index_variable
                  (identifier)
                  (expression
                      (range_expression
                          first: (expression
                              (integer_literal))
                          last: (expression
                              (integer_literal)))))
              (index_variable
                  (identifier)
                  (expression
                      (range_expression
                          first: (expression
                              (integer_literal))
                          last: (expression
                              (integer_literal)))))
              (block
                  (statement
                      (expression
                          (function_call
                              function: (expression
                                  (identifier))
                              arguments: (function_arguments
                                  (expression
                                      (binary_operation
                                          left: (expression
                                              (identifier))
                                          operator: (multiply)
                                          right: (expression
                                              (identifier)))))))))))))
