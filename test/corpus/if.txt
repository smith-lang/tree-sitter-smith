==================
if else
==================

if true { 1 } else { 2 }

---

(source_file
    (expr
        (if
            condition: (expr
                (bool))
            then: (block
                (expr
                    (int)))
            else: (block
                (expr
                    (int))))))

==================
if with no else
==================

if true {
    print("I will print")
}

---

(source_file
    (expr
        (if
            condition: (expr
                (bool))
            then: (block
                (expr
                    (call
                        fn: (expr
                            (symbol))
                        args: (args
                            (expr
                                (str)))))))))

==================
if with complex condition
==================

if x > 3 { 1 } else { 2 }

---

(source_file
    (expr
        (if
            condition: (expr
                (binary_op
                    left: (expr
                        (symbol))
                    right: (expr
                        (int))))
            then: (block
                (expr
                    (int)))
            else: (block
                (expr
                    (int))))))

==================
if, else if, else
==================

if x > 3 {
    print("greater than 3")
} else if x < 3 {
    print("less than 3")
} else {
    print("equal to 3")
}

---

(source_file
    (expr
        (if
            condition: (expr
                (binary_op
                    left: (expr
                        (symbol))
                    right: (expr
                        (int))))
            then: (block
                (expr
                    (call
                        fn: (expr
                            (symbol))
                        args: (args
                            (expr
                                (str))))))
            (else_if
                condition: (expr
                    (binary_op
                        left: (expr
                            (symbol))
                        right: (expr
                            (int))))
                then: (block
                    (expr
                        (call
                            fn: (expr
                                (symbol))
                            args: (args
                                (expr
                                    (str)))))))
            else: (block
                (expr
                    (call
                        fn: (expr
                            (symbol))
                        args: (args
                            (expr
                                (str)))))))))

==================
if, else if, else if, else
==================

if x > 100 {
    print("greater than 100")
} else if x > 50 {
    print("greater then 50")
} else if x > 10 {
    print("greater then 10")
} else {
    print("10 or less")
}

---

(source_file
    (expr
        (if
            condition: (expr
                (binary_op
                    left: (expr
                        (symbol))
                    right: (expr
                        (int))))
            then: (block
                (expr
                    (call
                        fn: (expr
                            (symbol))
                        args: (args
                            (expr
                                (str))))))
            (else_if
                condition: (expr
                    (binary_op
                        left: (expr
                            (symbol))
                        right: (expr
                            (int))))
                then: (block
                    (expr
                        (call
                            fn: (expr
                                (symbol))
                            args: (args
                                (expr
                                    (str)))))))
            (else_if
                condition: (expr
                    (binary_op
                        left: (expr
                            (symbol))
                        right: (expr
                            (int))))
                then: (block
                    (expr
                        (call
                            fn: (expr
                                (symbol))
                            args: (args
                                (expr
                                    (str)))))))
            else: (block
                (expr
                    (call
                        fn: (expr
                            (symbol))
                        args: (args
                            (expr
                                (str)))))))))
